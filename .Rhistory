fUrl1<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv?accessType=DOWNLOAD"
fUrl2<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv?accessType=DOWNLOAD"
download.file(fUrl1, destfile="./training.csv", method="curl")
download.file(fUrl1, destfile="./training.csv")
download.file(fUrl2, destfile="./test.csv")
fUrl1<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv?accessType=DOWNLOAD"
summary(training)
modelFit<- train(classe~ ., data=training, preProcess(c("center", "scale")), method="glm")
library(caret)
library(rpart)
library(randomForest)
set.seed(12343)
modelFit<- train(classe~ ., data=training, preProcess(c("center", "scale")), method="rpart")
trainDat<-subset(trainData, select = grep("kurt", invert=TRUE, names(trainData)))
trainData<-read.csv("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv")
testData<-read.csv("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv")
trainDat<-subset(trainData, select = grep("kurt", invert=TRUE, names(trainData)))
trainDat<-subset(trainDat, select = grep("skew", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("max", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("min", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("ampl", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("tota", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("var", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("stdd", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, select = grep("avg", invert=TRUE, names(trainDat)))
trainDat<-subset(trainDat, new_window=="no")
trainDat<-subset(trainDat, select = grep("^new_win", invert=TRUE, names(trainDat)))
dim(trainDat)
trainDat$classe<-factor(trainDat$classe)
training<-trainDat[6:55]
t<-trainDat[6:54]
## Fit Tree model (with pre-processing)
library(caret)
library(rpart)
library(randomForest)
set.seed(12343)
modelFit<- train(classe~ ., data=training, preProcess(c("center", "scale")), method="rpart")
modelFit<- train(classe~ ., data=training, method="rpart")
trainIndex = createDataPartition(classe,p=0.7,list=FALSE)
